#
# This file is generated by autoconf from "Make.defines.in".
#
# This is the "Make.defines" file that almost every "Makefile" in the
# source directories below this directory include.
# The "../" in the pathnames actually refer to this directory, since
# "make" is executed in all the subdirectories of this directory.
#
# System = x86_64-unknown-linux-gnu


# 1. 构建和打包工具

# 编译C程序的程序；默认‘cc’。
CC = cc
# 用于运行 C 预处理器的程序，并将结果输出到标准输出；默认‘$(CC)-E’。			
CPP = $(CC)-E
# 编译汇编文件的程序；默认‘as’。
AS = as
# 用于编译C++程序的程序；默认‘g++’
CXX = g++
# 档案维护程序；默认‘ar’。			
AR = ar
# 删除文件的命令；默认‘rm -f’。			
RM = rm -f

# 2. 下面是一个变量表，其值是上述程序的附加参数。除非另有说明，所有这些的默认值都是空字符串。
# 给档案维护程序的标志；默认‘rv’。
ARFLAGS = rv	
# 提供给汇编器的额外标志（当在“.s”或“.S”文件上显式调用时）。			
ASFLAGS = 		
# 提供给 C 编译器的额外标志。		
CFLAGS = 
# 提供给 C++ 编译器的额外标志。
CXXFLAGS := -std=c++20 -pedantic-errors -Wall -Werror -Wextra -Wpedantic \
			-Wshadow -fdiagnostics-color=always -ggdb -I../../include 
# 提供给 C 预处理器和使用它的程序（C 和 Fortran 编译器）的额外标志。			
CPPFLAGS = 			
# 当编译器应该调用链接器“ld”时，为编译器提供额外的标志，例如 -L./libdir , 应将库 (-lfoo) 添加到 LDLIBS 变量中。
LDFLAGS = -L../../lib
# 当编译器应该调用链接器“ld”时为编译器提供的库标志或名称。非库链接器标志（例如 -L）应放入 LDFLAGS 变量中。		
LDLIBS =  -ltool			


# 3.Following is the main library, built from all the object files in the lib/
LIBS = ../../tool

# 4.清理规则。
CLEANFILES = core core.* *.core *.o temp.* *.out typescript* \
		*.lc *.lh *.bsdi *.sparc *.uw 
